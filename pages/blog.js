import Head from 'next/head';
import Link from 'next/link';
import Image from 'next/image';
import { promises as fs } from 'fs';
import path from 'path';
import grayMatter from 'gray-matter';

const dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };

const Blog = ({ posts }) => {

    console.log('posts', posts);

    return (
        <>

        <Head>
        <title>Blog | Spotlight Media</title>
        <meta name="description" content="Generated by create next app" />
        </Head>

         {/* Full Screen Header */}
         <div className="relative bg-home-header bg-cover text-white w-full z-0 pt-24">
            {/* Overlay */}
            <div className="absolute w-full h-36 md:h-60 bg-black opacity-50 z-0">
            </div>

            {/* Hero Text Wrapper */}
            <div className="flex flex-col items-start z-20 h-36 md:h-60 justify-center">

            <div className="container mx-auto z-20 motion-safe:animate-fadeSlideUp">
                <h6 className="tracking-wider text-gray-500 text-left uppercase font-normal z-20">
                What We're up to
                </h6>

                <h1 className="w-4/5 leading-tight text-white text-left z-20">
                Blog
                </h1>
            </div>

            </div>
        </div>
        
        {/* Blog Section */}
        <div className="relative bg-gray-100 w-full">
            <div className="container mx-auto py-16 text-left">

                <div className="flex flex-wrap justify-between xs:mx-4 items-stretch">
                    
                { posts.map(post => {
                    return (
                        
                        <div className="w-full sm:w-48pc lg:w-32pc bg-white shadow-sm flex flex-col mb-8" key={post.path} >
                            
                            <Link href={post.path}>
                                <a>
                                <Image
                                src={post.img}
                                width={1080}
                                height={680}
                                />
                                </a>
                            </Link>

                            <div className="flex flex-col flex-grow py-4 px-6">

                            <Link href={post.path}>
                                <a>
                                    <h5>{post.title}</h5>
                                </a>
                            </Link>

                            <p className="mb-2 mt-2">Posted by <strong>{post.author}</strong> on <strong>{
                                new Date(`${post.date}`).toLocaleDateString("en-GB", dateOptions)}</strong></p>

                            <hr className="my-3 border-0 h-1 bg-yellow w-1/3" />

                            <p className="mt-3 mb-auto">{post.excerpt.substring(0, 200)}</p>

                            <Link href={post.path}><a className="btn-yellow-2-sm self-start mt-6">Read more</a>
                            </Link>

                            </div>
                        </div>
                        
                    )
                })}
                        

                </div>

            </div>
        </div>
        </>
    )
}

export default Blog;

export async function getStaticProps() {

    const postsDirectory = path.join(process.cwd(), 'pages/posts');
    const filenames = await fs.readdir(postsDirectory);

    const files = await Promise.all(filenames.map(async filename => {
        const filePath = path.join(postsDirectory, filename)
        const content = await fs.readFile(filePath, 'utf8')
        const matter = grayMatter(content);
        return {
            filename,
            matter,
            content
        }
    }));

    const posts = files.map(file => {
        return {
            path: `/posts/${file.filename.replace('.mdx', '')}`,
            title: file.matter.data.title,
            date: file.matter.data.date,
            img: file.matter.data.img,
            excerpt: file.matter.data.excerpt,
            author: file.matter.data.author,
            profilePicture: file.matter.data.profilePicture,
            // content: file.matter.content
        }
    });
    return {
        props: {
            posts
        }
    }
}